import java.awt.List;
import java.util.ArrayList;
import java.util.EmptyStackException;
import java.util.Iterator;
import java.util.Queue;


public class findingStudent {
	public static <E> boolean findMatch(SimpleQueue<E> myQ, SimpleStack<E> myS){
        if(myQ==null||myS==null){
        throw IllegalArgumentException();
        }
        if(myQ.isEmpty()||myS.isEmpty()){
        return false;
        }
        SimpleQueue<E> newQ = new SimpleQueue();
        ArrayList<E> save = new ArrayList<E>();
        while(!myQ.isEmpty()){
        <E> temp = myQ.dequeue();
        save.add(temp);
        }
        for(int i = save.size()-1;i>=0;i--){
        newQ.enqueue.add(save.get(i));
        myQ.enqueue.add(save.get(i));
        }

        save = new ArrayList<E>();
        while(!myS.isEmpty()){
        <E> temp = myS.pop();
        save.add(temp);
        }
        for(int i = save.size()-1;i>=0;i--){
        newS.push.add(save.get(i));
        myS.push.add(save.get(i));
        }

        while(!newQ.isEmpty()){
        SimpleStack<E> newS = myS;
        E compare = newQ.dequeue();
        while(!newS.isEmpty()){
        if(compare==newS.pop()){
        return true;
        };
        }
        }
        return false;
}
                 

}
                                                                                                                                                                  


